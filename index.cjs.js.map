{"version":3,"file":"index.cjs.js","sources":["index.js"],"sourcesContent":["const selectorParser = require('postcss-selector-parser')\n\nconst selectorProcessor = selectorParser(selectors => {\n  let hoverSelectors = []\n\n  selectors.filter(selector => {\n    selector.walk(node => {\n      if (node.type === 'pseudo' && node.value === ':hover') {\n        hoverSelectors.push(selector.toString())\n      }\n    })\n  })\n\n  let nonHoverSelectors = selectors\n    .map(selector => `${selector}`)\n    .filter(selectorExpression => !hoverSelectors.includes(selectorExpression))\n\n  return { hoverSelectors, nonHoverSelectors }\n})\n\nmodule.exports = ({\n  fallback = false,\n  fallbackSelector = 'html:not(.supports-touch)',\n  rootSelectors = []\n} = {}) => {\n  function createMediaQuery (rule, { AtRule }) {\n    let media = new AtRule({ name: 'media', params: '(hover: hover)' })\n\n    media.source = rule.source\n\n    media.append(rule)\n\n    return media\n  }\n\n  function isAlreadyNested (rule) {\n    let container = rule.parent\n\n    while (container !== null && container.type !== 'root') {\n      if (\n        container.type === 'atrule' &&\n        container.params.includes('hover: hover')\n      ) {\n        return true\n      }\n\n      container = container.parent\n    }\n\n    return false\n  }\n\n  return {\n    postcssPlugin: 'postcss-hover-media-feature',\n\n    Rule (rule, { AtRule }) {\n      if (\n        !rule.selector.includes(':hover') ||\n        isAlreadyNested(rule) ||\n        rule.selector.includes(fallbackSelector)\n      ) {\n        return\n      }\n\n      let {\n        hoverSelectors = [],\n        nonHoverSelectors = []\n      } = selectorProcessor.transformSync(rule.selector, { lossless: false })\n\n      let mediaQuery = createMediaQuery(\n        rule.clone({ selectors: hoverSelectors }),\n        { AtRule }\n      )\n\n      rule.after(mediaQuery)\n\n      if (fallback) {\n        rule.before(\n          rule.clone({\n            selectors: hoverSelectors.map(hoverSelector => {\n              if (\n                rootSelectors.some(rootSelector =>\n                  hoverSelector.startsWith(rootSelector)\n                )\n              ) {\n                return `${fallbackSelector}${hoverSelector}`\n              }\n              return `${fallbackSelector} ${hoverSelector}`\n            })\n          })\n        )\n      }\n\n      if (nonHoverSelectors.length) {\n        rule.replaceWith(rule.clone({ selectors: nonHoverSelectors }))\n\n        return\n      }\n\n      rule.remove()\n    }\n  }\n}\n\nmodule.exports.postcss = true\n"],"names":["selectorParser","require","selectorProcessor","selectors","hoverSelectors","filter","selector","walk","node","type","value","push","toString","nonHoverSelectors","map","selectorExpression","includes","module","exports","fallback","fallbackSelector","rootSelectors","createMediaQuery","rule","AtRule","media","name","params","source","append","isAlreadyNested","container","parent","postcssPlugin","Rule","transformSync","lossless","mediaQuery","clone","after","before","hoverSelector","some","rootSelector","startsWith","length","replaceWith","remove","postcss"],"mappings":"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"}